#include <stdio.h>
#include <openacc.h>

size_t var = 0;

int main()
{
	//переменная в памяти CPU
	var = 10;
	 
	//печатаем значение переменной var, находящейся в памяти СPU
    printf("cpu_var = %d\n", var);
     
	//выделяем память под данные в GPU, и производим копирования данных из памяти CPU в память GPU
	#pragma acc data copyin(var)
	{
		//даем команду компилятору сгенирировать оптимизированный код (по мнению компилятора) для GPU
		#pragma acc kernels
		{	
			//изменяем значение переменной в памяти GPU
			var = 5; 

			//печатаем значение переменной var, находящейся в памяти GPU
			printf("gpu_var = %d\n", var);
		}
		
		//печатаем значение переменной var, находящейся в памяти СPU
		printf("cpu_var = %d\n", var);

		//обновим переменную var в памяти CPU данными из памяти GPU
		// #pragma acc update self(var)  	

		//обновим переменную var в памяти GPU данными из памяти CPU
		//#pragma acc update device(var) 

		//изменяем значение переменной в памяти CPU
		//var = 0;			       
		
		//даем команду компилятору сгенирировать оптимизированный код (по мнению компилятора) для GPU
		#pragma acc kernels
		{
			//печатаем значение переменной var, находящейся в памяти GPU
			printf("gpu_var = %d\n", var);
		} 
 	}
 	
 	
 	//печатаем значение переменной var, находящейся в памяти СPU
	printf("cpu_var = %d\n", var);

	return 0;
}